version: "3.7"
services:
  postgres:
    image: postgres:11
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    deploy:
      placement:
        constraints: [node.role == manager]
  adminer:
    image:  adminer
    container_name: adminer
    depends_on:
      - postgres
    ports:
      - "9000:8080"
    environment:
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_HOST: postgres
      ADMINER_DEFAULT_DB_NAME: postgres
  backend:
    image:  com.mihai97ionita/docker-app:backend
    build: "."
    container_name: backend
    ports:
      - "9090:9090"
      - "35729:35729"
    deploy:
      mode: replicated
      replicas: 2
  prometheus:
    image:  com.mihai97ionita/docker-app:prometheus
    build: "./DockerFiles/prometheus/"
    container_name:  prometheus
    ports:
      - "8080:9090"
  front-end:
    image:  com.mihai97ionita/docker-app:front-end
    build: "./DockerFiles/front-end/"
    container_name: front-end
    ports:
      - "80:80"
    deploy:
      mode: replicated
      replicas: 2
  visualizer:
    image:  dockersamples/visualizer:stable
    container_name: visualizer
    ports:
      - "8181:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]